package components.tokenizer

enum class WordType(private vararg val atoms: WordAtom): WordDescriptor {
	OPERATOR(
		WordAtom.NOT,
		WordAtom.AND,
		WordAtom.OR,
		WordAtom.EQUALS,
		WordAtom.NOT_EQUALS,
		WordAtom.GREATER_OR_EQUALS_THAN,
		WordAtom.LOWER_OR_EQUALS_THAN,
		WordAtom.GREATER_THAN,
		WordAtom.LOWER_THAN,
		WordAtom.INCREMENT,
		WordAtom.DECREMENT,
		WordAtom.ADD,
		WordAtom.SUBTRACT,
		WordAtom.MULTIPLY,
		WordAtom.DIVIDE,
		WordAtom.PLUS,
		WordAtom.MINUS,
		WordAtom.STAR,
		WordAtom.SLASH
	),
	UNARY_OPERATOR(
		WordAtom.NOT,
		WordAtom.PLUS,
		WordAtom.MINUS,
		WordAtom.SPREAD
	),
	UNARY_MODIFICATION(
		WordAtom.INCREMENT,
		WordAtom.DECREMENT
	),
	BINARY_MODIFICATION(
		WordAtom.ADD,
		WordAtom.SUBTRACT,
		WordAtom.MULTIPLY,
		WordAtom.DIVIDE
	),
	BINARY_BOOLEAN_OPERATOR(
		WordAtom.AND,
		WordAtom.OR
	),
	UNION_OPERATOR(
		WordAtom.AND,
		WordAtom.OR
	),
	ADDITION(
		WordAtom.PLUS,
		WordAtom.MINUS
	),
	MULTIPLICATION(
		WordAtom.STAR,
		WordAtom.SLASH
	),
	EQUALITY(
		WordAtom.EQUALS,
		WordAtom.NOT_EQUALS
	),
	COMPARISON(
		WordAtom.GREATER_OR_EQUALS_THAN,
		WordAtom.LOWER_OR_EQUALS_THAN,
		WordAtom.GREATER_THAN,
		WordAtom.LOWER_THAN
	),
	CAST(
		WordAtom.AS,
		WordAtom.OPTIONAL_CAST,
		WordAtom.UNCHECKED_CAST,
		WordAtom.IS,
		WordAtom.IS_NOT
	),
	FUNCTION_DECLARATION(
		WordAtom.TO,
		WordAtom.IT
	),
	LAMBDA_FUNCTION(
		WordAtom.ARROW,
		WordAtom.CAPPED_ARROW
	),
	VARIABLE_DECLARATION(
		WordAtom.CONST,
		WordAtom.VAR,
		WordAtom.VAL
	),
	ACCESSOR(
		WordAtom.DOT,
		WordAtom.OPTIONAL_ACCESSOR,
		WordAtom.OPENING_PARENTHESIS,
		WordAtom.OPENING_BRACKET
	),
	MEMBER_ACCESSOR(
		WordAtom.DOT,
		WordAtom.OPTIONAL_ACCESSOR
	),
	GENERICS_START(
		WordAtom.LOWER_THAN
	),
	GENERICS_END(
		WordAtom.GREATER_THAN
	),
	GENERICS_MODIFIER(
		WordAtom.CONSUMING,
		WordAtom.PRODUCING
	),
	TYPE_TYPE(
		WordAtom.CLASS,
		WordAtom.OBJECT,
		WordAtom.ENUM
	),
	MODIFIER(
		WordAtom.ABSTRACT,
		WordAtom.NATIVE,
		WordAtom.OVERRIDING,
		WordAtom.IMMUTABLE,
		WordAtom.MUTABLE,
		WordAtom.MUTATING,
		WordAtom.SPREAD
	),
	TRY(
		WordAtom.OPTIONAL_TRY,
		WordAtom.UNCHECKED_TRY
	);

	override fun includes(atom: WordAtom?): Boolean {
		return atoms.contains(atom)
	}
}
